{"version":3,"sources":["components/item.js","components/list.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemBlock","styled","div","CheckCircle","props","done","css","LabelInput","input","ValueInput","Remove","Item","status","label","value","toggleStatus","editItemLabel","editItemValue","deleteItem","id","useState","inputStatus","setInputStatus","inputLabel","setInputLabel","inputValue","setInputValue","useEffect","onClick","event","console","log","target","checked","onChange","type","Number","TodoListBlock","OrderList","ol","AddButton","Total","List","Date","now","items","setItems","sum","useMemo","reduce","acc","item","changedValue","cur","newItems","findIndex","i","changedLabel","splice","elements","map","index","newList","push","style","verticalAlign","TodoTemplateBlock","TodoTemplate","children","GlobalStyle","createGlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c38d691b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nconst TodoItemBlock = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst CheckCircle = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  \n  ${props =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\nconst LabelInput = styled.input`\n  width:40%;\n  padding: 8px;\n  margin: -1px;\n  border: none; \n  border:solid 1px #ccc;\n  border-radius: 0;\n  outline:none;\n`;\nconst ValueInput = styled.input`\n  width:40%;\n  padding: 8px;\n  margin: -1px;\n  border: none; \n  border:solid 1px #ccc;\n  border-radius: 0;\n  outline:none;\n  text-align: end;\n`;\nconst Remove = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ncolor: #dee2e6;\nfont-size: 22px;\ncursor: pointer;\nmargin-left:6px;\n&:hover {\n  color: #ff6b6b;\n}\n\n`;\nconst Item = ({ status, label, value, toggleStatus, editItemLabel, editItemValue, deleteItem, id }) => {\n  const [inputStatus, setInputStatus] = useState(true);\n  const [inputLabel, setInputLabel] = useState('');\n  const [inputValue, setInputValue] = useState(0);\n\n  useEffect(() => {\n    setInputStatus(status);\n    setInputLabel(label);\n    setInputValue(value);\n\n  }, [status, label, value])\n  const onChangeHandler = (event) => {\n\n    setInputValue(Number(event.target.value))\n    editItemValue(Number(event.target.value), id)\n  }\n\n  const onChangeLabelHandler = (event) => {\n    setInputLabel(event.target.value)\n    editItemLabel(event.target.value, id)\n  }\n  const onChangeCheckboxHandler = (event) => {\n    console.log(event.target.checked)\n    setInputStatus(!inputStatus)\n    toggleStatus(!inputStatus, id)\n  }\n  const deleteHandler = (event) => {\n    deleteItem(id)\n  }\n  return (\n    <TodoItemBlock>\n\n      {/* <input type='checkbox' checked={inputStatus} onChange={onChangeCheckboxHandler}></input> */}\n      <CheckCircle done={inputStatus} onClick={onChangeCheckboxHandler}>{inputStatus && <MdDone />}</CheckCircle>\n      <LabelInput value={inputLabel} onChange={onChangeLabelHandler}></LabelInput>\n      <ValueInput value={inputValue} type=\"number\" onChange={onChangeHandler}></ValueInput>\n\n      <Remove onClick={deleteHandler}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  )\n};\n\nexport default Item;","import React, { useState, useEffect, useMemo } from 'react';\nimport Item from './item';\nimport styled from 'styled-components';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\nconst OrderList = styled.ol`\n  padding:0;\n  margin:0;\n`;\nconst AddButton = styled.div`\n  cursor: pointer;\n  &:hover {\n    color: #38d9a9;\n  }\n`;\nconst Total = styled.div`\n\npadding:8px 50px;\n  display:flex;\n  justify-content:space-between;\n`;\nconst List = (props) => {\n  const [items, setItems] = useState([\n    { id: Date.now() + 1, status: true, label: '포도', value: 1000 },\n    { id: Date.now() + 2, status: true, label: '당근', value: 2000 },\n    { id: Date.now() + 3, status: true, label: '양파', value: 3000 }]);\n  useEffect(() => {\n    console.log(items)\n  }, [items])\n\n  const sum = useMemo(() => {\n    return items.reduce((acc, item) => acc += item.status ? item.value : 0, 0);\n  }, [items]);\n\n  const editItemValue = (changedValue, id) => {\n    console.log(changedValue)\n    console.log(id)\n    setItems(cur => {\n      const newItems = [...cur];\n      const target = newItems.findIndex(i => i.id === id);\n      console.log(target)\n      console.log(newItems[target])\n      newItems[target].value = changedValue;\n      return newItems;\n    })\n  };\n\n  const editItemLabel = (changedLabel, id) => {\n    setItems(cur => {\n      const newItems = [...cur];\n      const target = newItems.findIndex(i => i.id === id);\n      console.log(target)\n      console.log(newItems[target])\n      newItems[target].label = changedLabel;\n      return newItems;\n    })\n  }\n  const toggleStatus = (status, id) => {\n    console.log(status)\n    setItems(cur => {\n      const newItems = [...cur];\n      const target = newItems.findIndex(i => i.id === id);\n      console.log(target)\n      console.log(newItems[target])\n      newItems[target].status = status;\n      return newItems;\n    })\n  }\n\n  const deleteItem = (id) => {\n    console.log(id);\n    setItems(cur => {\n      const newItems = [...cur];\n      const target = newItems.findIndex(i => i.id === id);\n      newItems.splice(target, 1);\n      return newItems;\n    })\n  }\n  const addItem = () => {\n    setItems(cur => {\n      const newList = [...cur];\n      newList.push({ id: Date.now(), status: true, label: '', value: 0 });\n      return newList;\n    })\n  }\n\n  const elements = items.map((item, index) =>\n    <Item\n      key={index}\n      id={item.id}\n      status={item.status}\n      label={item.label}\n      value={item.value}\n      toggleStatus={toggleStatus}\n      editItemLabel={editItemLabel}\n      editItemValue={editItemValue}\n      deleteItem={deleteItem}\n    />)\n  return (\n    <TodoListBlock>\n      <OrderList>\n        {elements}\n      </OrderList>\n      <Total>\n        <div>총</div>\n        <div>{sum}</div>\n      </Total>\n      <AddButton onClick={addItem}>\n\n        <AiFillPlusCircle style={{ verticalAlign: 'text-top' }} />\n\n\n        <span>새로운 항목 추가</span>\n      </AddButton>\n    </TodoListBlock>\n\n  )\n};\n\nexport default List;","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;","\nimport './App.css';\nimport List from './components/list';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <TodoTemplate>\n        <List />\n      </TodoTemplate>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}